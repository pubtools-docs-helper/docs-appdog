---
breadcrumb: PCF Application Watchdog Documentation
title: Using PCF Application Watchdog
owner: PCF Application Watchdog
---

This topic describes how to log into and use Pivotal Cloud Foundry (PCF) Application Watchdog.

##<a id='get-started'></a> Get Started with PCF Application Watchdog

1. Install the plugin with the command `cf install-plugin https://plugin-location`.
1. Target the Application Watchdog server with `cf appdog target https://appdog-server.YOUR-SYSTEM-DOMAIN`.
1. Verify that your server is working with `cf appdog report`. You should see a list of applications that have been scanned.

##<a id='scanning-apps'></a> Scanning Applications

PCF Application Watchdog provides data on application dependencies, licenses, and possible security vulnerabilities.

Application Watchdog will scan an application within several minutes of deployment. An application will be rescanned whenever it has been redeployed. Applications are also rescanned daily.

To see a summary of all applications Application Watchdog has scanned, you can use the `report` command:

```
$ cf appdog report
Connecting to appdog server https://appdog-server.local.pcfdev.io...
app name        org          space          last scan update           scan status
apps-manager    system       system         2016-08-09T18:13:12.000Z   failed (language not supported)
notifications   pcfdev-org   pcfdev-space   2016-08-09T18:13:13.000Z   failed (language not supported)
appdog-server   pcfdev-org   pcfdev-space   2016-08-09T18:14:04.000Z   scanned successfully
appdog-worker   pcfdev-org   pcfdev-space   2016-08-09T18:14:07.000Z   scanned successfully
test-app1       test-org     test-space     2016-08-09T18:21:28.000Z   scanned successfully
test-app2       test-org     test-space     2016-08-09T18:23:57.000Z   scanned successfully
```

In the above example, you can see that four applications have been successfully scanned. Application Watchdog currently only supports scanning Java and Ruby applications.

##<a id='scan-reports'></a> Showing Scan Reports

To see a report on the application `test-app` located in the org `test-org` and space `test-space`, you can run `cf appdog report my-org my-space my-app`. For example:

```
$ cf appdog report test-org test-space test-app1
Connecting to appdog server https://appdog-server.local.pcfdev.io...
The latest scan status for this app was: scanned

Detected Buildpack Name / Version: ruby 1.6.16

Detected Language & Version: ruby 2.2.4p230 (2015-12-16 revision 53155) [x86_64-linux]

Application Dependencies
library name      library version   latest version available   license
rack              1.5.2             2.0.1                      MIT
rack-protection   1.5.2             1.5.3                      MIT
sinatra           1.4.4             1.4.7                      MIT
tilt              1.4.1             2.0.5                      MIT

CVEs in Application Dependencies
CVE             CVSS Severity   Dependency   URL                                                              CWE
CVE-2015-3225   5.0             rack:1.5.2   https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2015-3225   CWE-19 Data Handling
```

In this case, you can see that `test-app1` is a Ruby Application running Ruby 2.2.4, and it was deployed with the Cloud Foundry Ruby Buildpack version 1.6.16.

Additionally, you can see that the application has some outdated dependencies, and one dependency (rack) has a published security vulnerability.

##<a id='info-sources'></a> Information Sources

Application Watchdog obtains its data from a variety of sources. This includes dependency manifests and files present in deployed applications. It obtains library version information from [rubygems.org](https://rubygems.org), [search.maven.org](https://search.maven.org) and license information using [License Finder](https://github.com/pivotal/LicenseFinder).

Vulnerability information is determined using publically available data sources such as the [National Vulnerability Database](https://nvd.nist.gov/).

##<a id='notifications'></a> Email Notifications

If you would like to receive emails about new vulnerabilities found in an application, you can run `cf appdog opt-in-vulnerability my-org my-space my-app` to subscribe.

Emails are sent to your login name if a CVE with a [CVSS](https://www.first.org/cvss) score of 7.0 or higher is identified within an application. The email will include the name of the app, and a list of the CVEs affecting it.

If you would like to receive emails about outdated dependencies in an application, you can run `cf appdog opt-in-dependency my-org my-space my-app` to subscribe.

Emails are sent to your Cloud Foundry accounts's email address if any dependency in the application has a newer version available from the maintainer.

You can opt into both vulnerability and dependency emails with the `cf appdog opt-in-all` command.

You can opt out of subscriptions either by clicking the unsubscribe link in the email, or with `cf appdog opt-out-all my-app`.

##<a id='appdog-updates'></a>Finding Applications with Outdated Dependencies

To identify all outdated dependencies in an org or space or app, you can use the command `cf appdog updates`. 

For example, `cf appdog updates --org test-org --space test-space` will list all outdated dependencies in the `test-org` org and `test-space` space:

```
$ cf appdog updates --org test-org --space test-space
Connecting to appdog server https://appdog-server.local.pcfdev.io...


Updates for:

   Dependency Name                                           Org        Space        App_Name    Current         Latest
   ch.qos.logback:logback-classic                            test-org   test-space   test-app2   1.1.5           1.1.7
   ch.qos.logback:logback-core                               test-org   test-space   test-app2   1.1.5           1.1.7
   org.springframework.boot:spring-boot-starter-web          test-org   test-space   test-app2   1.3.3.RELEASE   1.4.0.RELEASE
   org.yaml:snakeyaml                                        test-org   test-space   test-app2   1.16            1.17
   rack                                                      test-org   test-space   test-app1   1.5.2           2.0.1
   rack-protection                                           test-org   test-space   test-app1   1.5.2           1.5.3
   sinatra                                                   test-org   test-space   test-app1   1.4.4           1.4.7
   tilt                                                      test-org   test-space   test-app1   1.4.1           2.0.5


* denotes the dependency was added by a buildpack
```

The output will include the app name, outdated dependency, and currently available version.

You can also request outdated dependencies in a single application with `cf appdog updates --org test-org --space test-space app-name`.

##<a id='appdog-using'></a> Finding Applications Using a Given Library

To find applications using a specific dependency, you can run the command `cf appdog using`. For example, `cf appdog using tomcat` might return:

```
$ cf appdog using tomcat
Connecting to appdog server https://appdog-server.local.pcfdev.io...
tomcat is used in: 1 org(s) and 1 space(s):

App         Org        Space        URL
test-app2   test-org   test-space   test-app2.local.pcfdev.io
* denotes the dependency was added by a buildpack
```

Note that for the Java Buildpack, some dependencies may be provided by the buildpack. These are indicated by an asterisk. For example, the Java Runtime is usually injected by the buildpack:

```
$ cf appdog using openjdk-jre
openjdk-jre is used in: 1 org(s) and 1 space(s):

App            Org        Space        URL
test-app2(*)   test-org   test-space   test-app2.local.pcfdev.io
* denotes the dependency was added by a buildpack
```

You can optionally specify a dependency version, or range of versions, with an optional second argument. For example, `cf appdog using spring 4.2.7`, or `cf appdog using tomcat '<8.2'`. Note that you must include quotes for `<` or `>` so that the shell does not interpret these as redirections.

You can also limit your search to a given org or space with `--org` and `--space`.

##<a id='appdog-cve'></a> Finding Applications With a Given CVE

To find a list of applications that are vulnerable to a specific CVE, you can use the command `cf appdog cve`. For example, if you are interested in Spring applications that may be affected by [CVE-2016-5007](https://pivotal.io/security/cve-2016-5007), run the command:

```
$ cf appdog cve CVE-2016-5007
CVE-2016-5007 was found in:

App Name    Org        Space
test-app2   test-org   test-space
```

You can also limit your search to a given org or space with `--org` and `--space`.

##<a id='appdog-cvss'></a> Finding Applications With Vulnerabilities of a Given Severity

To find a list of applications with vulnerabilities of a given severity, you can use the command `cf appdog cvss`. For example, if you are interested in applications that are affected by vulnerabilities with a score greater than 7, run the command:

```
$ cf appdog cvss '>7'
1 apps have a severity score >7:

App         #of cve's >7   Org        Space
test-app2   15             test-org   test-space
```

Note that you must include quotes for `<` or `>` so that the shell does not interpret these as redirections.

You can also limit your search to a given org or space with `--org` and `--space`.

##<a id='appdog-license'></a> Finding Applications With Dependencies of a Given License

To find a list of applications with dependencies of a given license, you can use the command `cf appdog license`. For example, to find applications with MIT licensed dependencies, run the command:

```
$ cf appdog license MIT
MIT was found in:

App Name        Org          Space          License
appdog-server   pcfdev-org   pcfdev-space   MIT
appdog-server   pcfdev-org   pcfdev-space   New Relic,MIT,ruby
appdog-worker   pcfdev-org   pcfdev-space   MIT
appdog-worker   pcfdev-org   pcfdev-space   New Relic,MIT,ruby
test-app1       test-org     test-space     MIT
test-app2       test-org     test-space     MIT
```

You can also limit your search to a given org or space with `--org` and `--space`.
#
##<a id='appdog-dependencies'></a>Listing Dependencies of a Given Application

To list dependencies of a given application, you can use the command `cf appdog dependencies`. For example, to list dependencies of the `appdog-server`, run the command:

```
$ cf appdog dependencies --org pcfdev-org --space pcfdev-space appdog-server
Application Dependencies       Current Version
actionmailer                   4.2.6
actionpack                     4.2.6
actionview                     4.2.6
activejob                      4.2.6
activemodel                    4.2.6
activerecord                   4.2.6
activesupport                  4.2.6
[...]
xml-simple                     1.1.5
```

You may specify the org and space of the app with `--org` and `--space`. If the
org and space are not specified, then the given application will be searched
for in the currently targeted org and space.

##<a id='appdog-dependencies'></a>List Information about a Dependency in a Given Application

To list information about a dependency in a given application, you can use the command `cf appdog dependency-info`. For example, to list information about `activerecord` in `appdog-server`, you can run:

```
$ cf appdog dependency-info --org pcfdev-org --space pcfdev-space appdog-server activerecord
Name           Version   Latest Version   License
activerecord   4.2.6     5.0.0.1          MIT
```

You may specify the org and space of the app with `--org` and `--space`. If the
org and space are not specified, then the given application will be searched
for in the currently targeted org and space.

##<a id='additional-help'></a> Additional Help

You can get a summary of all appdog commands with `cf appdog help`, or usage information on a particular command with `cf appdog help <command>`.
